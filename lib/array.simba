//-----------------------------------------------------------------//
//--               SRL Resource Library                          --//
//--               ? arrayLoader                                 --//
//-----------------------------------------------------------------//
// * function strToTPtArrayEx(tPtStr, Separater: string): TPointArray; // by moparisthebest, modified by Ron
// * function strToTPtArray(tPtStr: string): TPointArray;          // by moparisthebest, modified by Ron
// * function tPtArrayToStrEx(newTPoint: TPointArray; Separater: string): string; // by moparisthebest, modified by Ron
// * function tPtArrayToStr(newTPoint: TPointArray): String;       // by moparisthebest, modified by Ron
// * function strToIntArrayEx(intArray, Separater: string): TIntegerArray; // by moparisthebest, modified by Ron
// * function strToIntArray(intArray: string): TIntegerArray;      // by moparisthebest, modified by Ron
// * function intArrayToStrEx(intArray: TIntegerArray; Separater: string): string; // by moparisthebest, modified by Ron
// * function intArrayToStr(intArray: TIntegerArray): string;      // by moparisthebest, modified by Ron
// * function strToFloatArrayEx(floatArray, Separater: string): TExtendedArray; // by moparisthebest, modified by Ron
// * function strToFloatArray(floatArray: String): TExtendedArray; // by moparisthebest, modified by Ron
// * function floatArrayToStrEx(floatArray: TExtendedArray; Separater: string): string; // by moparisthebest, modified by Ron
// * function floatArrayToStr(floatArray: TExtendedArray): string; // by moparisthebest, modified by Ron
// * function strToStrArrayEx(strArray, Separater: string): TStringArray; // by moparisthebest, modified by Ron
// * function strToStrArray(strArray: string): TStringArray;       // by moparisthebest, modified by Ron
// * function strArrayToStrEx(strArray: TStringArray; Separater: string): string;  // by moparisthebest, modified by Ron
// * function strArrayToStr(strArray: TStringArray): string;       // by moparisthebest, modified by Ron
// * function strToBoolArrayEx(boolArray, Separater: string): TBooleanArray; // by moparisthebest, modified by Ron
// * function strToBoolArray(boolArray: string): TBooleanArray;    // by moparisthebest, modified by Ron
// * function boolArrayToStrEx(boolArray: TBooleanArray; Separater: string): string; // by moparisthebest, modified by Ron
// * function boolArrayToStr(boolArray: TBooleanArray): string;   // by moparisthebest, modified by Ron

{*******************************************************************************
function strToTPtArrayEx(tPtStr, Separater: string): TPointArray;
By: moparisthebest, modified by Ron
Description: Loads a String into a TPointArray. (Example String: '50,10 80,53 350,765 8560,1897 2348,346')
*******************************************************************************}
function strToTPtArrayEx(tPtStr, Separater: string): TPointArray;
var
  i, commaPos, spacePos: Integer;
begin
  repeat
    SetArrayLength(Result, i + 1);
    commaPos := Pos(',', tPtStr);
    spacePos := Pos(Separater, tPtStr);
    Result[i].x := StrToInt(Copy(tPtStr, 1, commaPos - 1));
    if (not spacePos = 0) then
      Result[i].y := StrToInt(Copy(tPtStr, commaPos + 1, spacePos - commaPos - 1))
    else
    begin
      Result[i].y := StrToInt(Copy(tPtStr, commaPos + 1, Length(tPtStr)));
      Break;
    end;
    Delete(tPtStr, 1, spacePos);
    Inc(i);
  until false;
end;

{*******************************************************************************
function strToTPtArray(tPtStr: string): TPointArray;
By: moparisthebest, modified by Ron
Description: Refer to strToTPtArrayEx.
*******************************************************************************}
function strToTPtArray(tPtStr: string): TPointArray;
begin
  Result := strToTPtArrayEx(tPtStr, ' ');
end;

{*******************************************************************************
function tPtArrayToStrEx(newTPoint: TPointArray; Separater: string): string;
By: moparisthebest, modified by Ron
Description: Loads a TPointArray into a String. (Example String: '50,10 80,53 350,765 8560,1897 2348,346')
*******************************************************************************}
function tPtArrayToStrEx(newTPoint: TPointArray; Separater: string): string;
var
  i, tPtLength: Integer;
begin
  Result := '';
  tPtLength := GetArrayLength(newTPoint);
  repeat
    Result := Result + IntToStr(newTPoint[i].x) + ',' +
      IntToStr(newTPoint[i].y);
    if (not (i = (tPtLength - 1))) then
      Result := Result + Separater;
    Inc(i);
  until (i = tPtLength)
end;

{*******************************************************************************
function tPtArrayToStr(newTPoint: TPointArray): string;
By: moparisthebest, modified by Ron
Description: Refer to tPtArrayToStrEx.
*******************************************************************************}
function tPtArrayToStr(newTPoint: TPointArray): string;
begin
  Result := tPtArrayToStrEx(newTPoint, ' ');
end;

{*******************************************************************************
function strToIntArrayEx(intArray, Separater: string): TIntegerArray;
By: moparisthebest, modified by Ron
Description: Loads a String into an array of integer. (Example String: '567 389 3234 98342 7998767')
*******************************************************************************}
function strToIntArrayEx(intArray, Separater: string): TIntegerArray;
var
  i, spacePos: Integer;
begin
  repeat
    SetArrayLength(Result, i + 1);
    spacePos := Pos(Separater, intArray);
    if (not (spacePos = 0)) then
      Result[i] := StrToInt(Copy(intArray, 1, spacePos - 1))
    else
    begin
      Result[i] := StrToInt(Copy(intArray, 1, Length(intArray)));
      break;
    end;
    Delete(intArray, 1, spacePos);
    Inc(i);
  until (False)
end;

{*******************************************************************************
function strToIntArray(intArray: string): TIntegerArray;
By: moparisthebest, modified by Ron
Description: Refer to strToIntArrayEx.
*******************************************************************************}
function strToIntArray(intArray: string): TIntegerArray;
begin
  Result := strToIntArrayEx(intArray, ' ');
end;

{*******************************************************************************
function intArrayToStrEx(intArray: TIntegerArray; Separater: string): string;
By: moparisthebest and modified by Ron
Description: Loads an array of integer into a String. (Example String: '567 389 3234 98342 7998767')
*******************************************************************************}
function intArrayToStrEx(intArray: TIntegerArray; Separater: string): string;
var
  i, arrayLength: Integer;
begin
  Result := '';
  arrayLength := Length(intArray);
  repeat
    Result := Result + IntToStr(intArray[i]);
    if (not (i = (arrayLength - 1))) then
      Result := Result + Separater;
    Inc(i);
  until (i = arrayLength)
end;

{*******************************************************************************
function intArrayToStr(intArray: TIntegerArray): string;
By: moparisthebest, modified by Ron
Description: Refer to intArrayToStrEx.
*******************************************************************************}
function intArrayToStr(intArray: TIntegerArray): string;
begin
  Result := intArrayToStrEx(intArray, ' ');
end;

{*******************************************************************************
function strToFloatArrayEx(floatArray, Separater: string): TExtendedArray;
By: moparisthebest, modified by Ron
Description: Loads a String into an array of float. (Example String: '567.356 389.6756 3234.9865 98342.2314 7998767.324')
*******************************************************************************}
function strToFloatArrayEx(floatArray, Separater: string): TExtendedArray;
var
  i, spacePos: Integer;
begin
  repeat
    SetArrayLength(Result, i + 1);
    spacePos := Pos(Separater, floatArray);
    if spacePos > 0 then
      Result[i] := StrToFloat(Copy(floatArray, 1, spacePos - 1))
    else
    begin
      Result[i] := StrToFloat(Copy(floatArray, 1, Length(floatArray)));
      Break;
    end;
    Delete(floatArray, 1, spacePos);
    Inc(i);
  until false;
end;

{*******************************************************************************
function strToFloatArray(floatArray: string): TExtendedArray;
By: moparisthebest, modified by Ron
Description: Refer to strToFloatArrayEx.
*******************************************************************************}
function strToFloatArray(floatArray: string): TExtendedArray;
begin
  Result := strToFloatArrayEx(floatArray, ' ');
end;

{*******************************************************************************
function floatArrayToStrEx(floatArray : TExtendedArray; Separater: string): string;
By: moparisthebest, modified by Ron
Description: Loads an array of float into a String. (Example String: '567.356 389.6756 3234.9865 98342.2314 7998767.324')
*******************************************************************************}
function floatArrayToStrEx(floatArray : TExtendedArray; Separater: string): string;
var
  i, arrayLength: Integer;
begin
  Result := '';
  arrayLength := Length(floatArray);
  repeat
    Result := Result + FloatToStr(floatArray[i]);
    if (not (i = (arrayLength - 1))) then
      Result := Result + Separater;
    Inc(i);
  until (i = arrayLength)
end;

{*******************************************************************************
function floatArrayToStr(floatArray: TExtendedArray): string;
By: moparisthebest, modified by Ron
Description: Refer to floatArrayToStrEx.
*******************************************************************************}

function floatArrayToStr(floatArray: TExtendedArray): string;
begin
  Result := floatArrayToStrEx(floatArray, ' ');
end;

{*******************************************************************************
function strToStrArrayEx(strArray, Separater: string): TStringArray;
By: moparisthebest, modified by Ron
Description: Loads a String into an array of String. (Example String: 'Hello how are you today my friend? :D')
*******************************************************************************}
function strToStrArrayEx(strArray, Separater: string): TStringArray;
var
  i, spacePos: Integer;
begin
  repeat
    SetArrayLength(Result, i + 1);
    spacePos := Pos(Separater, strArray);
    if (not (spacePos = 0)) then
      Result[i] := (Copy(strArray, 1, spacePos - 1))
    else
    begin
      Result[i] := (Copy(strArray, 1, Length(strArray)));
      Break;
    end;
    Delete(strArray, 1, spacePos);
    Inc(i);
  until false;
end;

{*******************************************************************************
function strToStrArray(strArray: string): TStringArray;
By: moparisthebest, modified by Ron
Description: Refer to strToStrArrayEx.
*******************************************************************************}

function strToStrArray(strArray: string): TStringArray;
begin
  Result := strToStrArrayEx(strArray, ' ');
end;

{*******************************************************************************
function strArrayToStrEx(strArray: TStringArray; Separater: string): string;
By: moparisthebest, modified by Ron
Description: Loads an array of String into a String. (Example String: 'Hello how are you today my friend? :D')
*******************************************************************************}
function strArrayToStrEx(strArray: TStringArray; Separater: string): string;
var
  i, arrayLength: Integer;
begin
  Result := '';
  arrayLength := GetArrayLength(strArray);
  repeat
    Result := Result + (strArray[i]);
    if (not (i = (arrayLength - 1))) then
      Result := Result + Separater;
    Inc(i);
  until (i = arrayLength)
end;

{*******************************************************************************
function strArrayToStr(strArray : Array of String) : String;
By: moparisthebest, modified by Ron
Description: Refer to strArrayToStrEx.
*******************************************************************************}
function strArrayToStr(strArray : TStringArray): string;
begin
  Result := strArrayToStrEx(strArray, ' ');
end;

{*******************************************************************************
function strToBoolArrayEx(boolArray, Separater: string): TBooleanArray;
By: moparisthebest, modified by Ron
Description: Loads a String into an array of boolean. (Example String: 'true false false false true true false true false')
*******************************************************************************}
function strToBoolArrayEx(boolArray, Separater: string): TBooleanArray;
var
  i, spacePos: Integer;
begin
  repeat
    SetArrayLength(Result, i + 1);
    spacePos := Pos(Separater, boolArray);
    if (not (spacePos = 0)) then
      Result[i] := StrToBool(Copy(boolArray, 1, spacePos - 1))
    else
    begin
      Result[i] := StrToBool(Copy(boolArray, 1, Length(boolArray)));
      Break;
    end;
    Delete(boolArray, 1, spacePos);
    Inc(i);
  until (False)
end;

{*******************************************************************************
function strToBoolArray(boolArray: string): TBooleanArray;
By: moparisthebest, modified by Ron
Description: Refer to strToBoolArrayEx.
*******************************************************************************}
function strToBoolArray(boolArray: string): TBooleanArray;
begin
  Result := strToBoolArrayEx(boolArray, ' ');
end;

{*******************************************************************************
function boolArrayToStrEx(boolArray : TBooleanArray; Separater: string): string;
By: moparisthebest, modified by Ron
Description: Loads an array of boolean into a String. (Example String: 'true false false false true true false true false')
*******************************************************************************}
function boolArrayToStrEx(boolArray : TBooleanArray; Separater: string): string;
var
  i, arrayLength: Integer;
begin
  Result := '';
  arrayLength := GetArrayLength(boolArray);
  repeat
    Result := Result + BoolToStr(boolArray[i]);
    if (not (i = (arrayLength - 1))) then
      Result := Result + Separater;
    Inc(i);
  until (i = arrayLength)
end;

{*******************************************************************************
function boolArrayToStr(boolArray : TBooleanArray): string;
By: moparisthebest, modified by Ron
Description: Refer to boolArrayToStrEx.
*******************************************************************************}
function boolArrayToStr(boolArray : TBooleanArray): string;
begin
  Result := boolArrayToStrEx(boolArray, ' ');
end;

{*******************************************************************************
function tBToStrEx(newTBox: TBox; Separater: string): string;
By: sam
Description: Loads a TBox into a String. (Example String: '50,10 80,53')
*******************************************************************************}
function tBToStrEx(newTBox: TBox; Separater: string): string;
begin
  Result := IntToStr(newTBox.x1) + ',' + IntToStr(newTBox.y1) + Separater + IntToStr(newTBox.x2) + ',' + IntToStr(newTBox.y2);
end;

{*******************************************************************************
function tBToStr(newTBox: TBox): string;
By: sam
Description: Refer to tBtArrayToStrEx.
*******************************************************************************}
function tBToStr(newTBox: TBox): string;
begin
  Result := tBToStrEx(newTBox, ' ');
end;

{*******************************************************************************
function strToTBEx(tbStr: string; Separater: string): TBox;
By: sam
Description: Loads a String into a TBox. (Example String: '50,10 80,53')
*******************************************************************************}
function strToTBEx(tbStr: string; Separater: string): TBox;
begin
  Result := GetTPABounds(strToTPtArrayEx(tbStr, Separater));
end;

{*******************************************************************************
function strToTB(newTBox: TBox): TBox;
By: sam
Description: Refer to strToTBEx.
*******************************************************************************}
function strToTB(tbStr: string): TBox;
begin
  Result := strToTBEx(tbStr, ' ');
end;
