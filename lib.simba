(*
Lib
====

Supporting grid functions.

.. contents::

*)

var
  WS_ASSETS_PATH := IncludePath + '\SRL-OSR\ws\assets';

procedure Wat(WAIT1, WAIT2: Integer);
begin
  Wait(RandomRange(WAIT1, WAIT2));
end;

procedure MMose(X, Y, Xr, Yr: Integer);
Begin
  MMouse(X + RandomRange(-Xr, Xr), Y + RandomRange(-Yr, Yr), 0, 0);
End;

procedure Mose(X, Y, Xr, Yr: Integer; MouseWait: Integer; MouseWaitMultiplier: Double; Button: Variant);
var
  B, C: Integer;
  iButton: Integer;
begin
  MMose(X, Y, Xr, Yr);
  Wat(MouseWait, Round(MouseWait * MouseWaitMultiplier));
  if (varType(button) = varBoolean) then
  begin
    if (button) then
      iButton := mouse_left
    else
      iButton := mouse_right;
  end else
    iButton := button;
  if (iButton = mouse_move) then Exit; { we aren't actually clicking! }
  GetMousePos(B, C);
  HoldMouse(B, C, iButton);
  Wat(MouseWait, Round(MouseWait * MouseWaitMultiplier));
  GetMousePos(B, C);
  ReleaseMouse(B, C, iButton);
  Wat(MouseWait, Round(MouseWait * MouseWaitMultiplier));
end;

function DoCondition(TimeOut, WaitPer: Integer; Funct: function: Boolean; Condition: function: Boolean; Normal: Boolean): Boolean;
var
  T: Integer;
  B: Boolean;
begin
  T := GetSystemTime + TimeOut;
  repeat
    Funct();
    B := Condition();
    result := ((Normal and B) or (not (Normal or B)))
    if result then exit;
    Wait(RandomRange(WaitPer, Round(WaitPer * 1.5)));
  until (GetSystemTime > T);
end;

{$i SRL-OSR/ws/lib/array.simba}
{$i SRL-OSR/ws/lib/grid.simba}
{$i SRL-OSR/ws/lib/world.simba}
{$i SRL-OSR/ws/lib/login.simba}
{$i SRL-OSR/ws/lib/gametab.simba}
